Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV1(loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked U.toV1
Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV2(loader.reflect.ConvertData))
invoked U.toV2
Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV3(loader.core.definition$Def$Elt))
invoked U.toV3
Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV4())
invoked U.toV4
None
Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV6(loader.core.definition$Def$Elt,loader.reflect.ConvertData))
invoked U.toV6
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$V$.toV1(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV1
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$V$.toV2(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData))
invoked V.toV2
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$V$.toV3(loader.reflect.test.ReflectiveConvertersTest$S,loader.core.definition$Def$Elt))
invoked V.toV3
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$V$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV5(loader.core.CtxCore$Def$Elt,loader.reflect.ConvertData))
Some(MethodConverter1 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$S.toV1(loader.reflect.ConvertData,loader.core.definition$Def$Elt))
---- S to V ----
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV1(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV1
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV2(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData))
invoked V.toV2
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
None
None
None
---- T to W ----
None
None
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
None
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV8(loader.reflect.test.ReflectiveConvertersTest$T))
invoked V.toV8
---- S to W ----
None
None
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
None
None
None
---- T to V ----
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV1(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV1
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV2(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData))
invoked V.toV2
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV5(loader.reflect.test.ReflectiveConvertersTest$T,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV5
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV6(loader.reflect.test.ReflectiveConvertersTest$T,loader.reflect.ConvertData))
invoked V.toV6
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV8(loader.reflect.test.ReflectiveConvertersTest$T))
invoked V.toV8
---- S to V using CtxDef#Elt ----
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV1(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV1
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV2(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData))
invoked V.toV2
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV3(loader.reflect.test.ReflectiveConvertersTest$S,loader.core.CtxCore$Def$Elt))
invoked V.toV3
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
None
None
None
---- T to W using CtxDef#Elt ----
None
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV3(loader.reflect.test.ReflectiveConvertersTest$S,loader.core.CtxCore$Def$Elt))
invoked V.toV3
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV7(loader.reflect.test.ReflectiveConvertersTest$T,loader.core.CtxCore$Def$Elt))
invoked V.toV7
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV8(loader.reflect.test.ReflectiveConvertersTest$T))
invoked V.toV8
---- S to W using CtxDef#Elt ----
None
None
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV3(loader.reflect.test.ReflectiveConvertersTest$S,loader.core.CtxCore$Def$Elt))
invoked V.toV3
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
None
None
None
None
---- T to V using CtxDef#Elt ----
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV1(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV1
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV2(loader.reflect.test.ReflectiveConvertersTest$S,loader.reflect.ConvertData))
invoked V.toV2
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV3(loader.reflect.test.ReflectiveConvertersTest$S,loader.core.CtxCore$Def$Elt))
invoked V.toV3
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV4(loader.reflect.test.ReflectiveConvertersTest$S))
invoked V.toV4
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV5(loader.reflect.test.ReflectiveConvertersTest$T,loader.reflect.ConvertData,loader.core.definition$Def$Elt))
invoked V.toV5
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$V loader.reflect.test.ReflectiveConvertersTest$W$.toV6(loader.reflect.test.ReflectiveConvertersTest$T,loader.reflect.ConvertData))
invoked V.toV6
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV7(loader.reflect.test.ReflectiveConvertersTest$T,loader.core.CtxCore$Def$Elt))
invoked V.toV7
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$W$.toV8(loader.reflect.test.ReflectiveConvertersTest$T))
invoked V.toV8
---- S to V using CtxDef#Elt in X1 instancied from ConvertData ----
Some(MethodConverter2 with public loader.reflect.test.ReflectiveConvertersTest$W loader.reflect.test.ReflectiveConvertersTest$X1.toV3(loader.reflect.test.ReflectiveConvertersTest$S,loader.core.definition$Def$Elt))
invoked V.toV3
more than one possible converter function was found in RichClass[loader.reflect.test.ReflectiveConvertersTest.X1] for RichClass[loader.reflect.test.ReflectiveConvertersTest.S] => RichClass[loader.reflect.test.ReflectiveConvertersTest.V]
more than one possible converter function was found in RichClass[loader.reflect.test.ReflectiveConvertersTest.X1] for RichClass[loader.reflect.test.ReflectiveConvertersTest.T] => RichClass[loader.reflect.test.ReflectiveConvertersTest.V]
more than one possible converter function was found in RichClass[loader.reflect.test.ReflectiveConvertersTest.X1] for RichClass[loader.reflect.test.ReflectiveConvertersTest.T] => RichClass[loader.reflect.test.ReflectiveConvertersTest.W]
