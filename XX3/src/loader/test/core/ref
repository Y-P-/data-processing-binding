    limit = 2
    1 SeqAdapter[class [D]
    2 SeqAdapter[double]
(2,SeqAdapter[double])
    limit = 1
    1 SeqAdapter[class java.lang.Integer]
(1,SeqAdapter[class java.lang.Integer])
    limit = 1
    1 SeqAdapter[class java.lang.Integer]
(1,SeqAdapter[class java.lang.Integer])
    limit = 1
    1 SeqAdapter[class java.lang.Integer]
(1,SeqAdapter[class java.lang.Integer])
    limit = 1
    1 SeqAdapter[double]
(1,SeqAdapter[double])
* <> 0
* loader.test.core.CzBase$InferAnnot -1
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 1
+ loader.test.core.CzBase$InferAnnot 1
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
* <> 0
* loader.test.core.CzBase$InferAnnot 0
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
* <> 0
* loader.test.core.CzBase$InferAnnot 0
    limit = 2
    1 SeqAdapter[scala.collection.immutable.List<loader.test.core.CzBase$InferAnnot>]
    2 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(2,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 2
+ loader.test.core.CzBase$InferAnnot 2
    limit = 1
    1 SeqAdapter[double]
(1,SeqAdapter[double])
* <> 0
* loader.test.core.CzBase$InferAnnot -1
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
* <> 0
* loader.test.core.CzBase$InferAnnot 0
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
* <> 0
* loader.test.core.CzBase$InferAnnot 0
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 1
+ loader.test.core.CzBase$InferAnnot 1
    limit = 1
    1 SeqAdapter[double]
(1,SeqAdapter[double])
    limit = 3
    1 SeqAdapter[scala.collection.immutable.List<[Lloader.test.core.CzBase$InferAnnot;>]
    2 SeqAdapter[class [Lloader.test.core.CzBase$InferAnnot;]
    3 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(3,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 2
+ loader.test.core.CzBase$InferAnnot 2
    limit = 3
    1 SeqAdapter[scala.collection.immutable.List<[Lloader.test.core.CzBase$InferAnnot;>]
    2 SeqAdapter[class [Lloader.test.core.CzBase$InferAnnot;]
    3 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(3,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 2
+ loader.test.core.CzBase$InferAnnot 2
    limit = 2
    1 SeqAdapter[scala.collection.immutable.List<loader.test.core.CzBase$InferAnnot>]
    2 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(2,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 2
+ loader.test.core.CzBase$InferAnnot 2
    limit = 1
    1 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(1,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 1
+ loader.test.core.CzBase$InferAnnot 1
    limit = 2
    1 SeqAdapter[scala.collection.immutable.List<loader.test.core.CzBase$InferAnnot>]
    2 SeqAdapter[class loader.test.core.CzBase$InferAnnot]
(2,SeqAdapter[class loader.test.core.CzBase$InferAnnot])
+ <> 2
+ loader.test.core.CzBase$InferAnnot 2
